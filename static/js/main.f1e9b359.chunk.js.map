{"version":3,"sources":["components/NavBar.tsx","services/fakeMovieService.js","services/fakeGenreService.js","components/MovieCounter.tsx","components/Like.tsx","components/MoviesTable.tsx","components/Pagination.tsx","components/ListGroup.tsx","components/SearchBox.tsx","containers/Movies.tsx","utils/paginate.ts","components/Rentals.tsx","components/Customers.tsx","components/InputField.tsx","components/Select.tsx","components/MovieForm.tsx","components/NotFound.tsx","components/Login.tsx","components/Register.tsx","App.tsx","index.tsx"],"names":["NavBar","className","to","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","movies","_id","title","genre","name","numberInStock","dailyRentalRate","publishDate","genres","MovieCounter","count","text","Like","movieID","isLiked","likeHandler","style","cursor","fontSize","onClick","aria-hidden","MoviesTable","data","onDelete","onLike","onSort","renderMovieData","map","m","key","length","Pagination","props","pageCount","Math","ceil","itemCount","pageSize","pages","_","range","page","currentPage","onPageChange","ListGroup","selectedItem","onItemSelect","g","SearchBox","value","searchQuery","placeholder","onChange","evt","onChangeHandler","currentTarget","Movies","useState","setMovies","setGenre","selectedGenre","setSelectedGenre","setCurrentPage","path","order","sortColumn","setSortColumn","setSearchQuery","useEffect","allMovies","movieGenre","filter","movie","filteredMovies","toLowerCase","startsWith","items","pageNumber","startIndex","slice","take","paginate","orderBy","textDecoration","color","query","updateMovies","index","findIndex","copySortColumn","Rentals","Customers","InputField","label","useField","field","meta","errorText","error","touched","htmlFor","onBlur","Select","option","as","val","MovieForm","history","genreOptions","formValidation","yup","required","max","min","positive","initialValues","validationSchema","onSubmit","helper","push","saveMovie","uuid","setSubmitting","setTimeout","replace","values","isValid","isSubmitting","errors","disabled","NotFound","Login","validateForm","username","password","console","log","Register","email","profileName","helpers","App","exact","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f1e9b359.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst NavBar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\n      <div className=\"container\">\n        <NavLink className=\"navbar-brand\" to=\"/\">\n          Vidly\n        </NavLink>\n        <button\n          className=\"navbar-toggler d-lg-none\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#collapsibleNavId\"\n          aria-controls=\"collapsibleNavId\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n          <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/movies\">\n                Movies\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/customers\">\n                Customers\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/rentals\">\n                Rentals\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/login\">\n                Login\n              </NavLink>\n            </li>\n            <li className=\"nav-item\">\n              <NavLink className=\"nav-link\" to=\"/register\">\n                Register\n              </NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","// import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n  },\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find((m) => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  movies.push(movie);\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find((m) => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import React from \"react\";\n\ninterface Count {\n  count: number;\n}\n\nconst MovieCounter: React.FC<Count> = ({ count }) => {\n  // check how many movies are there\n  let text = \"There are no movie in database.\";\n  if (count === 1) {\n    text = \"There are 1 movie in database.\";\n  } else if (count > 1) {\n    text = `There are ${count} movies in database.`;\n  }\n  return (\n    <span\n      className={`alert d-block ${count ? \"alert-success\" : \"alert-danger\"}`}\n    >\n      {text}\n    </span>\n  );\n};\nexport default MovieCounter;\n","import * as React from \"react\";\n\ninterface Props {\n  movieID: string;\n  isLiked: boolean;\n  likeHandler: (id: string) => void;\n}\n\nconst Like: React.FC<Props> = ({ movieID, isLiked, likeHandler }) => {\n  return (\n    <span\n      style={{ cursor: \"pointer\", fontSize: 19 }}\n      onClick={() => likeHandler(movieID)}\n    >\n      {isLiked ? (\n        <i className=\"fa fa-heart text-danger\" aria-hidden=\"true\"></i>\n      ) : (\n        <i className=\"fa fa-heart-o text-danger\" aria-hidden=\"true\"></i>\n      )}\n    </span>\n  );\n};\n\nexport default Like;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Movie } from \"../interfaces/Movie\";\nimport Like from \"./Like\";\n\ninterface AllMoviesData {\n  data: Movie[];\n  onDelete: (movieID: string) => void;\n  onLike: (movieID: string) => void;\n  onSort: (path: string) => void;\n}\n\nconst MoviesTable: React.FC<AllMoviesData> = ({\n  data,\n  onDelete,\n  onLike,\n  onSort,\n}) => {\n  const renderMovieData = data.map((m) => (\n    <tr key={m._id}>\n      <td>\n        <Link to={`/movies/${m._id}`}> {m.title}</Link>\n      </td>\n      <td>{m.genre.name}</td>\n      <td>{m.dailyRentalRate}</td>\n      <td>{m.numberInStock}</td>\n      <td>\n        <Like movieID={m._id} isLiked={m.isLiked} likeHandler={onLike} />\n      </td>\n      <td>\n        <button\n          className=\"btn  btn-outline-danger btn-sm text-center\"\n          onClick={() => onDelete(m._id)}\n        >\n          <i\n            style={{ fontSize: 17 }}\n            className=\"fa fa-trash-o\"\n            aria-hidden=\"true\"\n          ></i>\n        </button>\n      </td>\n    </tr>\n  ));\n  return (\n    <table className={`table w-100 ${data.length === 0 ? \"d-none\" : \"\"}`}>\n      <thead>\n        <tr>\n          <th onClick={() => onSort(\"title\")}>Title</th>\n          <th onClick={() => onSort(\"genre.name\")}>Genre</th>\n          <th onClick={() => onSort(\"dailyRentalRate\")}>Rating</th>\n          <th onClick={() => onSort(\"numberInStock\")}>Stock</th>\n          <th>Like</th>\n          <th>Take-Action</th>\n        </tr>\n      </thead>\n      <tbody>{renderMovieData}</tbody>\n    </table>\n  );\n};\n\nexport default MoviesTable;\n","import * as React from \"react\";\nimport _ from \"lodash\";\n\ninterface Props {\n  itemCount: number;\n  pageSize: number;\n  currentPage: number;\n  onPageChange: (currentPage: number) => void;\n}\n\nconst Pagination: React.FC<Props> = (props) => {\n  const pageCount: number = Math.ceil(props.itemCount / props.pageSize);\n  if (pageCount === 1) return null;\n  const pages = _.range(1, pageCount + 1);\n\n  return (\n    <nav aria-label=\"Page navigation\">\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={`page-item ${\n              page === props.currentPage ? \"active\" : \"\"\n            }`}\n          >\n            <button\n              className=\"page-link\"\n              onClick={() => props.onPageChange(page)}\n            >\n              {page}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","import * as React from \"react\";\nimport { MovieGenre } from \"../interfaces/Movie\";\n\ninterface Props {\n  data: MovieGenre[];\n  selectedItem: MovieGenre;\n  onItemSelect: (genre: MovieGenre) => void;\n}\n\nconst ListGroup: React.FC<Props> = ({ data, selectedItem, onItemSelect }) => {\n  return (\n    <ul className=\"list-group\">\n      {data.map((g) => (\n        <li\n          key={g._id}\n          className={`list-group-item ${selectedItem === g ? \"active\" : \"\"}`}\n          onClick={() => onItemSelect(g)}\n        >\n          {g.name}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ListGroup;\n","import * as React from \"react\";\n\ninterface SearchQuery {\n  searchQuery: string;\n  onChangeHandler: (query: string) => void;\n}\nconst SearchBox: React.FC<SearchQuery> = (props) => {\n  return (\n    <div className=\"form-group\">\n      <input\n        className=\"form-control\"\n        type=\"search\"\n        name=\"searchBox\"\n        value={props.searchQuery}\n        placeholder=\"Search...\"\n        onChange={(evt) => props.onChangeHandler(evt.currentTarget.value)}\n      />\n    </div>\n  );\n};\nexport default SearchBox;\n","import React, { useState, useEffect } from \"react\";\nimport { Movie, MovieGenre, Sorting } from \"../interfaces/Movie\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport _ from \"lodash\";\nimport MovieCounter from \"../components/MovieCounter\";\nimport MoviesTable from \"../components/MoviesTable\";\nimport Pagination from \"../components/Pagination\";\nimport { paginate } from \"../utils/paginate\";\nimport ListGroup from \"../components/ListGroup\";\nimport { Link } from \"react-router-dom\";\nimport SearchBox from \"../components/SearchBox\";\n\nconst Movies: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [genre, setGenre] = useState<MovieGenre[]>([]);\n  const [selectedGenre, setSelectedGenre] = useState<MovieGenre>({\n    _id: \"\",\n    name: \"\",\n  });\n  const [pageSize] = useState<number>(4);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [sortColumn, setSortColumn] = useState<Sorting>({\n    path: \"title\",\n    order: \"asc\",\n  });\n  const [searchQuery, setSearchQuery] = useState<string>(\"\");\n\n  useEffect(() => {\n    const allMovies = getMovies();\n    const movieGenre = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    const movies = allMovies.map((movie) => {\n      return { ...movie, isLiked: false };\n    });\n    setMovies(movies);\n    setGenre(movieGenre);\n  }, []);\n\n  let filteredMovies = movies;\n  if (searchQuery) {\n    filteredMovies = movies.filter((m) =>\n      m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n    );\n  } else if (selectedGenre && selectedGenre._id) {\n    movies.filter((movie) => movie.genre._id === selectedGenre._id);\n  }\n\n  const sortedMovies = _.orderBy(\n    filteredMovies,\n    [sortColumn.path],\n    [sortColumn.order]\n  );\n\n  const allMovies = paginate(sortedMovies, currentPage, pageSize);\n\n  // movie delete handler\n  function handleDelete(movieID: string) {\n    const updateMovies = movies.filter((m) => m._id !== movieID);\n    setMovies(updateMovies);\n  }\n  // movie like handler\n  function handleLike(movieID: string) {\n    const allMovies = [...movies];\n    const index = allMovies.findIndex((m) => m._id === movieID);\n    allMovies[index].isLiked = !allMovies[index].isLiked;\n    setMovies(allMovies);\n  }\n  // handle page change for pagination\n  function handlePageChange(page: number) {\n    setCurrentPage(page);\n  }\n\n  // handle item select on listgroup genre\n  function handleItemSelect(genre: MovieGenre) {\n    setSelectedGenre(genre);\n    setSearchQuery(\"\");\n    setCurrentPage(1);\n  }\n\n  function handleSort(path: string) {\n    const copySortColumn = { ...sortColumn };\n    if (copySortColumn.path === path) {\n      copySortColumn.order = copySortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      copySortColumn.path = path;\n      copySortColumn.order = \"asc\";\n    }\n    setSortColumn(copySortColumn);\n  }\n\n  function handleSearchChange(query: string) {\n    setSearchQuery(query);\n    setSelectedGenre({ _id: null, name: null });\n    setCurrentPage(1);\n  }\n\n  return (\n    <>\n      <div className=\"row mt-4\">\n        <div className=\"col-3\">\n          <ListGroup\n            data={genre}\n            selectedItem={selectedGenre}\n            onItemSelect={handleItemSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <button className=\"btn btn-primary mb-2\">\n            <Link\n              style={{ textDecoration: \"none\", color: \"#fff\" }}\n              to=\"/movies/new\"\n            >\n              New Movie\n            </Link>\n          </button>\n          <SearchBox\n            searchQuery={searchQuery}\n            onChangeHandler={handleSearchChange}\n          />\n          <div>\n            <MovieCounter count={movies.length} />\n            <MoviesTable\n              data={allMovies}\n              onDelete={handleDelete}\n              onLike={handleLike}\n              onSort={handleSort}\n            />\n          </div>\n          <Pagination\n            itemCount={filteredMovies.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={handlePageChange}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Movies;\n","import { Movie } from \"./../interfaces/Movie\";\nimport _ from \"lodash\";\n\nexport function paginate(\n  items: Movie[],\n  pageNumber: number,\n  pageSize: number\n): Movie[] {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import * as React from \"react\";\n\nconst Rentals: React.FC = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import * as React from \"react\";\n\nconst Customers: React.FC = () => <h1>Customers</h1>;\n\nexport default Customers;\n","import * as React from \"react\";\nimport { FieldAttributes, useField } from \"formik\";\n\ntype FieldProps = {\n  label: string;\n} & FieldAttributes<{}>;\n\nconst InputField: React.FC<FieldProps> = ({ label, ...props }) => {\n  const [field, meta] = useField<{}>(props);\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"name\">{label}</label>\n      <input\n        id={field.name}\n        name={field.name}\n        value={props.value}\n        onChange={field.onChange}\n        type={props.type}\n        onBlur={field.onBlur}\n        className=\"form-control mb-2\"\n      />\n      {errorText !== \"\" ? (\n        <div className=\"alert alert-danger\">{errorText}</div>\n      ) : null}\n    </div>\n  );\n};\n\nexport default InputField;\n","import * as React from \"react\";\nimport { Field, ErrorMessage } from \"formik\";\n\ninterface Props {\n  label: string;\n  name: string;\n  option: Array<{ key: string; value: string }>;\n  touched: boolean | undefined;\n  error: string | undefined;\n}\n\nconst Select: React.FC<Props> = (props) => {\n  const { label, name, option, touched, error } = props;\n  //   const [field] = useField<{}>(props);\n  const errorText = error && touched ? error : \"\";\n\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"selectItems\">Select Genre</label>\n      <Field as=\"select\" name={name} id=\"selectItems\" className=\"form-control\">\n        {option.map((val) => {\n          return (\n            <option key={val.key} value={val.value}>\n              {val.key}\n            </option>\n          );\n        })}\n      </Field>\n      {errorText ? (\n        <div className=\"alert alert-danger mt-2\">\n          <ErrorMessage name={name} />\n        </div>\n      ) : null}\n    </div>\n  );\n};\nexport default Select;\n","import * as React from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Formik, Field, Form, FormikHelpers } from \"formik\";\nimport * as yup from \"yup\";\nimport InputField from \"./InputField\";\nimport Select from \"./Select\";\nimport { saveMovie } from \"../services/fakeMovieService\";\n\nimport { v4 as uuid } from \"uuid\";\n\ninterface Props extends RouteComponentProps<{ id: string }> {}\n\ninterface Movie {\n  _id: string;\n  title: string;\n  genre: { _id: string; name: string };\n  numberInStock: number;\n  dailyRentalRate: number;\n  publishDate?: string;\n}\n\ninterface Genre {\n  _id: string;\n  name: string;\n}\n\nconst MovieForm: React.FC<Props> = (props) => {\n  const history = props.history;\n\n  const genreOptions = [\n    { key: \"Select a Genre\", value: \"\" },\n    { key: \"Action\", value: \"Action\" },\n    { key: \"Comedy\", value: \"Comedy\" },\n    { key: \"Thriller\", value: \"Thriller\" },\n  ];\n\n  const initialValues: Movie = {\n    _id: \"\",\n    title: \"\",\n    genre: { _id: \"\", name: \"\" },\n    numberInStock: 0,\n    dailyRentalRate: 0,\n  };\n\n  const formValidation = yup.object({\n    title: yup.string().required().max(30),\n    genre: yup.object({ name: yup.string().required(\"Please select a genre\") }),\n    numberInStock: yup.number().required().min(0).positive(),\n    dailyRentalRate: yup.number().required().min(0).max(10).positive(),\n  });\n\n  return (\n    <div className=\"col-6 m-auto mt-4 py-2\">\n      <h1 className=\"text-center my-2\">Movie Form</h1>\n      <Formik\n        initialValues={initialValues}\n        validationSchema={formValidation}\n        onSubmit={(data, helper: FormikHelpers<Movie>) => {\n          const movie: Movie = {\n            _id: uuid(),\n            title: data.title,\n            genre: { _id: uuid(), name: data.genre.name },\n            numberInStock: data.numberInStock,\n            dailyRentalRate: data.dailyRentalRate,\n            publishDate: data.publishDate,\n          };\n          saveMovie(movie);\n          helper.setSubmitting(false);\n          setTimeout(() => {\n            history.replace(\"/movies\");\n          }, 500);\n        }}\n      >\n        {({ values, isValid, isSubmitting, touched, errors }) => (\n          <Form>\n            <Field label=\"Title\" name=\"title\" type=\"text\" as={InputField} />\n            <Select\n              label=\"Select Genre\"\n              name=\"genre.name\"\n              option={genreOptions}\n              touched={touched.genre?.name}\n              error={errors.genre?.name}\n            />\n            <Field\n              label=\"Number In Stock\"\n              name=\"numberInStock\"\n              type=\"number\"\n              as={InputField}\n            />\n            <Field\n              label=\"Rate\"\n              name=\"dailyRentalRate\"\n              type=\"number\"\n              as={InputField}\n            />\n            <button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              disabled={!isValid || isSubmitting}\n            >\n              Save\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default MovieForm;\n","import * as React from \"react\";\n\nconst NotFound: React.FC = () => <h1>Page not found</h1>;\n\nexport default NotFound;\n","import * as React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as yup from \"yup\";\nimport InputField from \"./InputField\";\n\ninterface FormValues {\n  username: string;\n  password: string;\n}\n\nconst Login: React.FC = () => {\n  const initialValues: FormValues = { username: \"\", password: \"\" };\n\n  const handleSubmit = (values: FormValues) => {\n    console.log(values);\n  };\n\n  const validateForm = yup.object({\n    username: yup.string().required(\"Username is Required\").max(15),\n    password: yup.string().required(\"Password is Required\").min(8).max(20),\n  });\n\n  return (\n    <div className=\"col-8 m-auto mt-4 py-2\">\n      <h1>Login</h1>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={handleSubmit}\n        validationSchema={validateForm}\n      >\n        <Form>\n          <Field label=\"Username\" type=\"text\" name=\"username\" as={InputField} />\n          <Field\n            label=\"Password\"\n            type=\"password\"\n            name=\"password\"\n            as={InputField}\n          />\n          <button type=\"submit\" className=\"btn btn-primary\">\n            Login\n          </button>\n        </Form>\n      </Formik>\n    </div>\n  );\n};\nexport default Login;\n","import * as React from \"react\";\nimport { Formik, Form, Field, FormikHelpers } from \"formik\";\nimport InputField from \"./InputField\";\nimport * as yup from \"yup\";\n\ninterface FormValues {\n  email: string;\n  password: string;\n  profileName: string;\n}\nconst Register: React.FC = () => {\n  const initialFormValues: FormValues = {\n    email: \"\",\n    password: \"\",\n    profileName: \"\",\n  };\n\n  const formValidation = yup.object({\n    email: yup.string().email().required(\"Email is required\"),\n    password: yup.string().min(8).max(15).required(\"Password is required\"),\n    profileName: yup.string().max(20).required(\"Please give your name\"),\n  });\n\n  return (\n    <div className=\"col-8 m-auto mt-4 py-2\">\n      <h1>Register Form</h1>\n      <Formik\n        initialValues={initialFormValues}\n        validationSchema={formValidation}\n        onSubmit={(data, helpers: FormikHelpers<FormValues>) => {\n          console.log(data);\n          helpers.setSubmitting(false);\n        }}\n      >\n        {({ isValid, isSubmitting }) => (\n          <Form>\n            <Field label=\"Username\" type=\"email\" name=\"email\" as={InputField} />\n            <Field\n              label=\"Password\"\n              type=\"password\"\n              name=\"password\"\n              as={InputField}\n            />\n            <Field\n              label=\"Profile Name\"\n              type=\"text\"\n              name=\"profileName\"\n              as={InputField}\n            />\n            <button\n              className=\"btn btn-success\"\n              type=\"submit\"\n              disabled={!(isValid || isSubmitting)}\n            >\n              Register\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nexport default Register;\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport NavBar from \"./components/NavBar\";\nimport Movies from \"./containers/Movies\";\nimport Rentals from \"./components/Rentals\";\nimport Customers from \"./components/Customers\";\nimport MovieForm from \"./components/MovieForm\";\nimport NotFound from \"./components/NotFound\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <header>\n        <NavBar />\n      </header>\n\n      <main className=\"container\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Movies />\n          </Route>\n          <Route exact path=\"/movies\">\n            <Movies />\n          </Route>\n          <Route exact path=\"/customers\">\n            <Customers />\n          </Route>\n          <Route exact path=\"/rentals\">\n            <Rentals />\n          </Route>\n          <Route exact path=\"/movies/:id\" component={MovieForm} />\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n          <Route path=\"/not-found\">\n            <NotFound />\n          </Route>\n          <Redirect to=\"/not-found\" />\n        </Switch>\n      </main>\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"font-awesome/css/font-awesome.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}